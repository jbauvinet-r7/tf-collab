AWSTemplateFormatVersion: 2010-09-09
Description: CloudFormation Template to deploy an EC2 instance and then install ADDS + Threat Simulation Prerequisites
Parameters:
  Subnet:
    Type: String
    Description: Subnet
  SecurityGroup:
    Type: String
    Description: Security Group
  Token:
    Type: String
    Description: Token
  AMIID:
    Type: String
    Description: AMI ID
  LaunchDate:
    Type: String
    Description: Launch Date
  Client:
    Type: String
    Description: Summation of client name - to allow same pattern to be used across clients
    Default: ClientDemo
  Hostname:
    Type: String
    Description: Hostname - maximum 15 characters
    MaxLength: '15'
    Default: w22
  OS:
    Type: String
    Description: OS Version
    Default: WindowsServer2022Base
  InstanceSize:
    Type: String
    Description: Instance Size
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium
  DomainDNSName:
    Type: String
    Description: Fully Qualified Domain Name
    Default: AttackSimulationR7.local
  DomainNetBiosName:
    Type: String
    Description: NETBIOS Domain Name
    Default: ATTSIMUR7
  DomainMode:
    Type: String
    Description: Domain Mode
    Default: Default
  ForestMode:
    Type: String
    Description: Domain Mode
    Default: Default
  SafeModeAdministratorPassword:
    MinLength: '8'
    NoEcho: 'true'
    Type: String
    Description: SafeModeAdministrator Password - used when creating ADDS
    Default: 6r%V@FmSGVny
  Environment:
    Type: String
    Description: >-
      Specific Environment - leveraged for AD group creation as well as OU
      location for server objects
    Default: Simulation
  AvailabilityZone:
    Type: String
    Description: Default AZ
  KeyPair:
    Type: String
    Description: KEY Name
  Owner:
    Description: Resource Owner
    Type: String
  Project:
    Type: String
    Description: Tag Value for Project
    Default: Attack Simulation
  Application:
    Type: String
    Description: Tag value for Application - leveraged for Active Directory Group creation.
    Default: Simulation
  S3BucketName:
    Description: S3 bucket
    Type: String
  S3ObjectURL:
    Description: S3 Object URL
    Type: String
Resources:
  InstanceProfile:
        Type: AWS::IAM::InstanceProfile
        Properties: 
          InstanceProfileName: !Sub 'ec2-instance-profile-${Client}-${LaunchDate}'
          Path: /
          Roles: 
           - !Ref Ec2InstanceRole
  Ec2InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub 'ec2-instance-role-${Client}-${LaunchDate}'
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
  InstanceS3Policy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub 'S3-instance-policy-${Client}-${LaunchDate}'
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Action:
              - s3:*
            Resource:
              - !Sub 'arn:aws:s3:::${S3BucketName}/*'
              - !Sub 'arn:aws:s3:::${S3BucketName}'
      Roles:
        -
          !Ref Ec2InstanceRole
  Instance:
    Type: 'AWS::EC2::Instance'
    Metadata:
      'AWS::CloudFormation::Authentication':
        S3AccessCreds:
          type: S3
          buckets:
            - !Ref S3BucketName
          roleName: !Ref Ec2InstanceRole
      'AWS::CloudFormation::Init':
        configSets:
          config:
            - get-files
            - configure-instance
        get-files:
          files:
            c:\s3-downloads\scripts\windows-host-setup-STD.ps1:
                source: !Sub https://${S3ObjectURL}/scripts/windows-host-setup-STD.ps1
                authentication: S3AccessCreds
            c:\s3-downloads\scripts\MDR_prerequisites-STD.ps1:
                source: !Sub https://${S3ObjectURL}/scripts/MDR_prerequisites-STD.ps1
                authentication: S3AccessCreds
            c:\s3-downloads\agent_folder\installation.bat:
                content: 'msiexec /i c:\s3-downloads\agent_folder\PyForensicsAgent-x64.msi /l*v c:\s3-downloads\agent_folder\installation.log CUSTOMTOKEN={{token}} /quiet'
                context:
                  token: !Sub '${Token}'
            c:\s3-downloads\agent_folder\Org_POVAgent_velociraptor-v0.73.1-windows-amd64.msi:
                source: !Sub https://${S3ObjectURL}/Org_POVAgent_velociraptor-v0.73.1-windows-amd64.msi
                authentication: S3AccessCreds
            c:\s3-downloads\agent_folder\installation_vc.bat:
                content: 'msiexec /i c:\s3-downloads\agent_folder\Org_POVAgent_velociraptor-v0.73.1-windows-amd64.msi /l*v c:\s3-downloads\agent_folder\installation_VC.log /quiet'
        configure-instance:
          commands:
            1-set-powershell-execution-policy:
              command: >-
                powershell.exe -Command "Set-ExecutionPolicy UnRestricted
                -Force"
              waitAfterCompletion: '0'
            2-install-vc-agent:
              command: >-
                powershell.exe -Command
                "c:\s3-downloads\agent_folder\installation_vc.bat"
              waitAfterCompletion: forever
            3-rename-computer:
              command: !Join 
                - ''
                - - ''
                  - powershell.exe -Command "Rename-Computer -Restart -NewName "
                  - !Ref Hostname
              waitAfterCompletion: forever
            6-configure-windows-host:
              command: >-
                powershell.exe -Command
                "c:\s3-downloads\scripts\windows-host-setup-STD.ps1"
                waitAfterCompletion: '60'
            7-install-attack-components:
              command: >-
                powershell.exe -Command
                "c:\s3-downloads\scripts\MDR_prerequisites-STD.ps1"
            8-install-agent:
              command: >-
                powershell.exe -Command
                "c:\s3-downloads\agent_folder\installation.bat"
              waitAfterCompletion: forever
    Properties:
      DisableApiTermination: 'false'
      AvailabilityZone: !Sub '${AvailabilityZone}'
      InstanceInitiatedShutdownBehavior: stop
      IamInstanceProfile: !Ref InstanceProfile
      ImageId: !Sub '${AMIID}'
      InstanceType: !Sub '${InstanceSize}'
      KeyName: !Sub '${KeyPair}'
      UserData: !Base64 
        'Fn::Join':
          - ''
          - - |
              <powershell>
            - 'cfn-init.exe '
            - ' --stack '
            - Ref: 'AWS::StackId'
            - ' --resource Instance'
            - ' --region '
            - Ref: 'AWS::Region'
            - ' --configsets config'
            - |2
               -v 
            - 'cfn-signal.exe  '
            - ' ---exit-code 0'
            - ' --region '
            - Ref: 'AWS::Region'
            - ' --resource Instance'
            - ' --stack '
            - Ref: 'AWS::StackName'
            - |+

            - |
              </powershell>
      Tags:
        - Key: Tenant
          Value: !Sub '${Environment}'
        - Key: Application
          Value: !Sub '${Application}'
        - Key: Name
          Value: !Sub '${Environment}-${Hostname}-${Client}-${LaunchDate}'
        - Key: Owner
          Value: !Sub '${Owner}'
        - Key: OS
          Value: !Sub '${OS}'
        - Key: Project
          Value: !Sub '${Project}'
      NetworkInterfaces:
        - DeleteOnTermination: 'true'
          Description: Primary network interface
          DeviceIndex: 0
          SubnetId: !Sub '${Subnet}'
          GroupSet: 
            - !Sub '${SecurityGroup}'
Outputs:
  InstanceId:
    Description: InstanceId
    Value: !Ref Instance
  InstancePrivateIP:
    Description: InstancePrivateIP
    Value: !GetAtt Instance.PrivateIp
